{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"/api/user/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        //save user to local storage\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n\n        //update auth context\n        dispatch({\n          type: \"LOGIN\",\n          payload: data\n        });\n        setIsLoading(false);\n        setError(null);\n      } else {\n        setError(data.error);\n        setIsLoading(false);\n      }\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","user","type","payload"],"sources":["C:/Users/harsh/OneDrive/Desktop/Study Materials/Projects/SugarSync/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"./useAuthContext\";\r\n\r\nexport const useSignup = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const { dispatch } = useAuthContext();\r\n\r\n  const signup = async (email, password) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\"/api/user/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        //save user to local storage\r\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n\r\n        //update auth context\r\n        dispatch({ type: \"LOGIN\", payload: data });\r\n\r\n        setIsLoading(false);\r\n        setError(null);\r\n      } else {\r\n        setError(data.error);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return { signup, isLoading, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACxCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;QAC/CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACf;QACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACC,IAAI,CAACK,IAAI,CAAC,CAAC;;QAEvD;QACAhB,QAAQ,CAAC;UAAEiB,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAEP;QAAK,CAAC,CAAC;QAE1CZ,YAAY,CAAC,KAAK,CAAC;QACnBF,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACLA,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;QACpBG,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,SAAS;MACRG,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEE,MAAM;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACrC,CAAC;AAACD,EAAA,CAxCWD,SAAS;EAAA,QAGCD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}