{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\OneDrive\\\\Desktop\\\\Study Materials\\\\Projects\\\\SugarSync\\\\frontend\\\\src\\\\components\\\\SugarForm.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSugarContext } from \"../hooks/useSugarContext\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { useEffect } from \"react\";\nimport { Chart } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HbA1cAndGraph = () => {\n  _s();\n  const [hba1c, setHbA1c] = useState(\"\");\n  const [sugarLogs, setSugarLogs] = useState([]);\n  useEffect(() => {\n    // Fetch HbA1c\n    const fetchHbA1c = async () => {\n      const response = await fetch(\"/api/sugars/hba1c\", {\n        headers: {\n          Authorization: `Bearer ${user.token}` // Ensure you have the user's token\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setHbA1c(data.hba1c);\n      }\n    };\n\n    // Fetch sugar logs for the last 3 months\n    const fetchSugarLogs = async () => {\n      const response = await fetch(\"/api/sugars?timeframe=3months\", {\n        headers: {\n          Authorization: `Bearer ${user.token}` // Ensure you have the user's token\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSugarLogs(data);\n        // Initialize graph here after data is fetched\n      }\n    };\n    fetchHbA1c();\n    fetchSugarLogs();\n  }, []);\n\n  // Initialize the graph with Chart.js in a useEffect hook based on sugarLogs state\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"HbA1c: \", hba1c]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"sugarGraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(HbA1cAndGraph, \"9FTyoND1eKY0Yv4fjZc7LXEXWoI=\");\n_c = HbA1cAndGraph;\nconst SugarForm = () => {\n  _s2();\n  const {\n    dispatch\n  } = useSugarContext();\n  const [sugarlvl, setSugarlvl] = useState(\"\");\n  const [meal, setMeal] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const {\n    user\n  } = useAuthContext();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) {\n      setError(\"You must be logged in\");\n      return;\n    }\n    const newSugar = {\n      sugarlvl,\n      meal,\n      notes\n    };\n    const response = await fetch(\"/api/sugars\", {\n      method: \"POST\",\n      body: JSON.stringify(newSugar),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      setError(data.error);\n      setEmptyFields(data.emptyFields);\n    }\n    if (response.ok) {\n      setSugarlvl(\"\");\n      setMeal(\"\");\n      setNotes(\"\");\n      setError(null);\n      setEmptyFields([]);\n      console.log(\"new sugar log added:\", data);\n      dispatch({\n        type: \"CREATE_SUGAR\",\n        payload: data\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a New Sugar Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Sugar Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sugarlvl,\n      onChange: e => setSugarlvl(e.target.value),\n      className: `${emptyFields.includes(\"sugarlvl\") ? \"error\" : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Meal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: meal,\n      onChange: e => setMeal(e.target.value),\n      className: `${emptyFields.includes(\"meal\") ? \"error\" : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: notes,\n      onChange: e => setNotes(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s2(SugarForm, \"i9rYBsp0eImiR2xakhSQ/+Hzaco=\", false, function () {\n  return [useSugarContext, useAuthContext];\n});\n_c2 = SugarForm;\nexport default SugarForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"HbA1cAndGraph\");\n$RefreshReg$(_c2, \"SugarForm\");","map":{"version":3,"names":["useState","useSugarContext","useAuthContext","useEffect","Chart","jsxDEV","_jsxDEV","HbA1cAndGraph","_s","hba1c","setHbA1c","sugarLogs","setSugarLogs","fetchHbA1c","response","fetch","headers","Authorization","user","token","data","json","ok","fetchSugarLogs","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","SugarForm","_s2","dispatch","sugarlvl","setSugarlvl","meal","setMeal","notes","setNotes","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","newSugar","method","body","JSON","stringify","console","log","type","payload","className","onSubmit","value","onChange","target","includes","_c2","$RefreshReg$"],"sources":["C:/Users/harsh/OneDrive/Desktop/Study Materials/Projects/SugarSync/frontend/src/components/SugarForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useSugarContext } from \"../hooks/useSugarContext\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\nimport { useEffect } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\n\r\nconst HbA1cAndGraph = () => {\r\n  const [hba1c, setHbA1c] = useState(\"\");\r\n  const [sugarLogs, setSugarLogs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch HbA1c\r\n    const fetchHbA1c = async () => {\r\n      const response = await fetch(\"/api/sugars/hba1c\", {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`, // Ensure you have the user's token\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setHbA1c(data.hba1c);\r\n      }\r\n    };\r\n\r\n    // Fetch sugar logs for the last 3 months\r\n    const fetchSugarLogs = async () => {\r\n      const response = await fetch(\"/api/sugars?timeframe=3months\", {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`, // Ensure you have the user's token\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setSugarLogs(data);\r\n        // Initialize graph here after data is fetched\r\n      }\r\n    };\r\n\r\n    fetchHbA1c();\r\n    fetchSugarLogs();\r\n  }, []);\r\n\r\n  // Initialize the graph with Chart.js in a useEffect hook based on sugarLogs state\r\n\r\n  return (\r\n    <div>\r\n      <h3>HbA1c: {hba1c}</h3>\r\n      <canvas id=\"sugarGraph\"></canvas>{\" \"}\r\n      {/* This is where the graph will be rendered */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SugarForm = () => {\r\n  const { dispatch } = useSugarContext();\r\n\r\n  const [sugarlvl, setSugarlvl] = useState(\"\");\r\n  const [meal, setMeal] = useState(\"\");\r\n  const [notes, setNotes] = useState(\"\");\r\n\r\n  const [error, setError] = useState(null);\r\n  const [emptyFields, setEmptyFields] = useState([]);\r\n\r\n  const { user } = useAuthContext();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!user) {\r\n      setError(\"You must be logged in\");\r\n      return;\r\n    }\r\n\r\n    const newSugar = { sugarlvl, meal, notes };\r\n\r\n    const response = await fetch(\"/api/sugars\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newSugar),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setError(data.error);\r\n      setEmptyFields(data.emptyFields);\r\n    }\r\n\r\n    if (response.ok) {\r\n      setSugarlvl(\"\");\r\n      setMeal(\"\");\r\n      setNotes(\"\");\r\n      setError(null);\r\n      setEmptyFields([]);\r\n      console.log(\"new sugar log added:\", data);\r\n      dispatch({ type: \"CREATE_SUGAR\", payload: data });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}>\r\n      <h3>Add a New Sugar Log</h3>\r\n      <label>Sugar Level</label>\r\n      <input\r\n        type=\"number\"\r\n        value={sugarlvl}\r\n        onChange={(e) => setSugarlvl(e.target.value)}\r\n        className={`${emptyFields.includes(\"sugarlvl\") ? \"error\" : \"\"}`}\r\n      />\r\n      <label>Meal</label>\r\n      <input\r\n        type=\"text\"\r\n        value={meal}\r\n        onChange={(e) => setMeal(e.target.value)}\r\n        className={`${emptyFields.includes(\"meal\") ? \"error\" : \"\"}`}\r\n      />\r\n      <label>Notes</label>\r\n      <input\r\n        type=\"text\"\r\n        value={notes}\r\n        onChange={(e) => setNotes(e.target.value)}\r\n      />\r\n      <div>\r\n        <button>Submit</button>\r\n      </div>\r\n\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SugarForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}